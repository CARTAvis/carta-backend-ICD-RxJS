name: 'Run ICD tests via Apptainer'
description: 'Start carta_backend and run ICD tests'
inputs:
  os_version:
    description: 'Platfrom'
    required: true
  image:
    description: 'Apptainer image'
    required: true
  port:
    description: 'Port number for carta_backend'
    required: true
  test_stage_name:
    description: 'ICD test stage'
    required: true

runs:
  using: 'composite'
  steps:
    - run: |
        set -eo pipefail  # Make script exit on any error
    
        SRC_DIR=$GITHUB_WORKSPACE/source
        BUILD_DIR=$GITHUB_WORKSPACE/build-${{ inputs.os_version }}
        TEST_STAGE="$BUILD_DIR/ICD-RxJS/ICD_test_stages/${{ inputs.test_stage_name }}.tests"
        LOG_FILE="/tmp/carta_icd_${{ inputs.os_version }}_${{ inputs.test_stage_name }}.log"
        
        # Function to cleanup backend process
        cleanup() {
          local backend_pid=$(pgrep -f "carta_backend.*${{ inputs.port }}" | head -n 1)
          if [ ! -z "$backend_pid" ]; then
            echo "Cleaning up carta_backend (PID: $backend_pid)"
            kill -9 "$backend_pid" || true
          fi
        }
        
        # Set trap for cleanup
        trap cleanup EXIT
        
        apptainer exec \
          --bind $GITHUB_WORKSPACE:$GITHUB_WORKSPACE \
          --bind /images:/images \
          --pwd $BUILD_DIR \
          ${{ inputs.image }} /bin/bash -c "\
            # Start the carta_backend
            ASAN_OPTIONS=suppressions=$SRC_DIR/debug/asan/myasan.supp \
            LSAN_OPTIONS=suppressions=$SRC_DIR/debug/asan/myasan-leaks.supp \
            ASAN_SYMBOLIZER_PATH=llvm-symbolizer \
            ./carta_backend /images \
              --top_level_folder /images \
              --port ${{ inputs.port }} \
              --omp_threads=4 \
              --debug_no_auth \
              --no_frontend \
              --no_database \
              --no_log \
              --verbosity=5 >> $LOG_FILE 2>&1 & \
            CARTA_BACKEND_PID=\$(pgrep -f 'carta_backend.*${{ inputs.port }}' | head -n 1) && \
            echo 'carta_backend started with PID' \$CARTA_BACKEND_PID && \
            # Run the ICD tests
            cd $BUILD_DIR/ICD-RxJS && \
            pwd && \
            cat $TEST_STAGE && \
            failed_tests=() && \
            mapfile -t test_files < $TEST_STAGE && \
            for test_file in \"\${test_files[@]}\"; do
              if [ -n \"\$test_file\" ]; then  # Skip empty lines
                if ! CI=true npm test -- \"\$test_file\"; then
                  failed_tests+=(\"\$test_file\")
                fi
              fi
            done && \
            if [ \${#failed_tests[@]} -ne 0 ]; then
              echo \"The following tests failed:\" && \
              printf '%s\n' \"\${failed_tests[@]}\" && \
              exit 1
            fi"
      shell: bash
